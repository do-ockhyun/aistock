# PRD: 증권 AI 질의응답 서비스 MVP

## 1. 프로젝트 개요

### 1.1 서비스 명
**StockGPT** - 자연어 기반 증권 정보 조회 서비스

### 1.2 프로젝트 목표
- 고객이 자연어로 주식 관련 질문을 하면 AI가 의도를 파악하여 적절한 정보를 제공
- 기존 주가 시스템과 연동하여 실시간 정보 제공
- MVP 단계에서 핵심 기능 검증 후 단계적 확장

### 1.3 대상 사용자
- **1차**: 증권사 임직원 (내부 검증용)
- **2차**: 증권사 고객 (일반 투자자)

### 1.4 성공 지표
- AI 의도 파악 정확도: 80% 이상
- 응답 시간: 3초 이내
- 일 사용자 수: 100명 (MVP 기준)

## 2. 핵심 기능 정의

### 2.1 Phase 1 기능

#### 2.1.1 개별 종목 주가 조회
**사용자 질의 예시**
- "오늘 삼성전자 주식은 어때?"
- "SK하이닉스 현재가 알려줘"
- "카카오 어제 대비 얼마나 올랐어?"

**Intent**: `stock_price_inquiry`

**구조화된 쿼리 예시**
```json
{
  "intent": "stock_price_inquiry",
  "entities": {
    "stock_name": "삼성전자",
    "stock_code": "005930",
    "date": "2025-06-22",
    "metrics": ["current_price", "change_rate", "change_amount"],
    "comparison": "previous_day"
  }
}
```

**API 연동**
- 기존 주가 시스템: `/api/stocks/{code}/current`
- 응답 형식: 현재가, 전일대비, 등락률, 거래량

#### 2.1.2 시장 지수 분석
**사용자 질의 예시**
- "오늘 지수가 엄청 떨어졌던대, 무슨 일 있어?"
- "코스피 어때?"
- "나스닥 어제 대비 얼마나 변했어?"

**Intent**: `market_index_analysis`

**구조화된 쿼리 예시**
```json
{
  "intent": "market_index_analysis",
  "entities": {
    "index_type": "KOSPI",
    "date": "2025-06-22",
    "analysis_type": "change_analysis",
    "reason_inquiry": true
  }
}
```

### 2.2 Phase 2 기능 

#### 2.2.1 관심종목 랭킹 조회
**사용자 질의 예시**
- "오늘 관심종목 중에 상승률 높은 종목 3개 추려줘"
- "내 관심종목에서 거래량 많은 순으로 보여줘"

**Intent**: `watchlist_ranking`

**전제조건**: 사용자 로그인 + 관심종목 등록 데이터 필요

#### 2.2.2 포트폴리오 분석
**사용자 질의 예시**
- "잔고에서 수익률이 안좋아서 손절해야할 종목 알려줘"
- "내 포트폴리오 수익률 좋은 종목 3개 알려줘"

**Intent**: `portfolio_analysis`

**전제조건**: 사용자 포트폴리오 데이터 연동 필요

## 3. 시스템 아키텍처

### 3.1 전체 플로우
```
사용자 입력 
→ AI Intent 파싱 
→ 구조화된 쿼리 생성 
→ Intent별 비즈니스 로직 실행 
→ 기존 주가 API 호출 
→ 응답 Template 적용 
→ 자연어 응답 생성
```

### 3.2 컴포넌트 구조

#### 3.2.1 AI Parser Service
**역할**: 자연어 질의를 구조화된 쿼리로 변환
**기술**: OpenAI GPT-4 API 또는 Claude API
**입력**: 사용자 자연어 질의
**출력**: JSON 형태의 구조화된 쿼리

#### 3.2.2 Intent Handler Service
**역할**: Intent별 비즈니스 로직 처리
**기능**: 
- Intent 유형별 분기 처리
- 필요한 API 호출 결정
- 데이터 전처리

#### 3.2.3 Stock Data Service
**역할**: 기존 주가 시스템과 연동
**API 목록**:
- 실시간 주가 조회
- 과거 주가 조회  
- 시장 지수 조회
- 종목 기본 정보 조회

#### 3.2.4 Response Generator Service
**역할**: 구조화된 데이터를 자연어 응답으로 변환
**방식**: Template 기반 + LLM 활용

### 3.3 데이터베이스 설계

#### 3.3.1 주요 테이블
```sql
-- 사용자 관심종목
CREATE TABLE user_watchlist (
    id BIGINT PRIMARY KEY,
    user_id VARCHAR(50),
    stock_code VARCHAR(6),
    stock_name VARCHAR(100),
    created_at TIMESTAMP
);

-- AI 파싱 캐시
CREATE TABLE parsing_cache (
    id BIGINT PRIMARY KEY,
    query_hash VARCHAR(64),
    parsed_result TEXT,
    created_at TIMESTAMP,
    expires_at TIMESTAMP
);

-- 사용자 질의 로그
CREATE TABLE query_log (
    id BIGINT PRIMARY KEY,
    user_id VARCHAR(50),
    original_query TEXT,
    parsed_intent VARCHAR(50),
    response_time INTEGER,
    success BOOLEAN,
    created_at TIMESTAMP
);
```

## 4. API 명세

### 4.1 채팅 질의 API
```
POST /api/v1/chat/query
Content-Type: application/json

Request:
{
  "query": "오늘 삼성전자 주식은 어때?",
  "user_id": "user123" // 선택적
}

Response:
{
  "success": true,
  "data": {
    "response": "삼성전자 현재가는 75,000원이며, 전일대비 1,000원(1.35%) 상승했습니다.",
    "intent": "stock_price_inquiry",
    "entities": {
      "stock_name": "삼성전자",
      "stock_code": "005930",
      "current_price": 75000,
      "change_amount": 1000,
      "change_rate": 1.35
    },
    "disclaimer": "본 정보는 투자 참고용이며, 실시간 정보와 차이가 있을 수 있습니다."
  },
  "response_time": 1250
}
```

### 4.2 Intent 목록 조회 API
```
GET /api/v1/intents

Response:
{
  "success": true,
  "data": [
    {
      "intent": "stock_price_inquiry",
      "description": "개별 종목 주가 조회",
      "examples": ["삼성전자 주가 알려줘", "SK하이닉스 현재가는?"]
    },
    {
      "intent": "market_index_analysis", 
      "description": "시장 지수 분석",
      "examples": ["코스피 어때?", "오늘 지수 왜 떨어졌어?"]
    }
  ]
}
```

## 5. 프롬프트 엔지니어링

### 5.1 Intent 파싱 프롬프트
```
당신은 증권 관련 질의를 분석하는 전문가입니다.
사용자의 질의를 분석하여 다음 JSON 형태로 응답해주세요.

질의: "{user_query}"

응답 형식:
{
  "intent": "stock_price_inquiry|market_index_analysis|watchlist_ranking|portfolio_analysis",
  "entities": {
    "stock_name": "종목명 (한글)",
    "stock_code": "6자리 종목코드", 
    "date": "YYYY-MM-DD 형식",
    "metrics": ["요청된 지표들"],
    "comparison": "비교 기준",
    "limit": "결과 개수"
  },
  "confidence": 0.95
}

규칙:
1. 종목명이 명확하지 않으면 stock_name을 null로 설정
2. 날짜 표현이 없으면 오늘 날짜 사용
3. confidence가 0.7 미만이면 "unknown" intent 사용
4. 한국 주식시장 기준으로 해석
```

### 5.2 응답 생성 프롬프트
```
주식 정보를 바탕으로 자연스러운 응답을 생성해주세요.

데이터: {stock_data}
Intent: {intent}

응답 규칙:
1. 친근하고 전문적인 톤 유지
2. 투자 권유 금지, 참고용임을 명시
3. 숫자는 천단위 콤마 표시
4. 등락률은 소수점 둘째자리까지 표시
5. 200자 이내로 간결하게 작성
```

## 6. 개발 일정

### 6.1 전체 일정 (4주)

#### Week 1: 기반 환경 구축
- [ ] Spring Boot 프로젝트 세팅
- [ ] AI API 연동 환경 구성
- [ ] 기본 Intent 정의 (2개)
- [ ] Mock API 구현

#### Week 2: 핵심 기능 개발
- [ ] AI 파싱 서비스 구현
- [ ] Intent Handler 구현
- [ ] 기본 응답 생성 로직
- [ ] 단위 테스트 작성

#### Week 3: 시스템 연동
- [ ] 실제 주가 API 연동
- [ ] 캐싱 로직 구현
- [ ] 에러 처리 및 예외 상황 대응
- [ ] 통합 테스트

#### Week 4: UI 구현 및 검증
- [ ] 간단한 채팅 UI 구현
- [ ] 전체 플로우 테스트
- [ ] 성능 최적화
- [ ] 배포 준비

### 6.2 마일스톤
- **Week 1 End**: Mock API 동작 확인
- **Week 2 End**: AI 파싱 정확도 70% 달성  
- **Week 3 End**: 실제 주가 연동 완료
- **Week 4 End**: MVP 완성 및 내부 데모

## 7. 기술 스택

### 7.1 Backend
- **Framework**: Spring Boot 3.5.3
- **Language**: Java 17
- **Database**: H2 (개발), PostgreSQL (운영)
- **Cache**: Redis
- **AI API**: OpenAI GPT-4 또는 Claude API

### 7.2 Frontend (간단한 UI)
- **Framework**: Thymeleaf 또는 React (선택)
- **CSS**: Bootstrap 또는 Tailwind CSS

### 7.3 DevOps
- **Build**: Gradle
- **Test**: JUnit 5, Mockito
- **Documentation**: Swagger/OpenAPI
- **Monitoring**: Spring Actuator

## 8. 리스크 및 대응방안

### 8.1 기술적 리스크
| 리스크 | 영향도 | 대응방안 |
|--------|--------|----------|
| AI 파싱 정확도 낮음 | 높음 | Few-shot 예시 추가, 더 구체적인 프롬프트 |
| 기존 시스템 연동 지연 | 중간 | Mock API로 우선 개발, 병렬 진행 |
| 응답 속도 느림 | 중간 | 캐싱 적극 활용, 비동기 처리 |

### 8.2 비즈니스 리스크
| 리스크 | 영향도 | 대응방안 |
|--------|--------|----------|
| 컴플라이언스 이슈 | 높음 | 법무팀 사전 검토, 면책조항 필수 포함 |
| 정보 부정확성 | 높음 | 실시간 데이터 검증, 신뢰도 표시 |
| 사용자 수용성 낮음 | 중간 | 단계적 출시, 피드백 적극 수렴 |

## 9. 성공 기준 및 KPI

### 9.1 기술적 KPI
- **정확도**: AI Intent 파싱 정확도 80% 이상
- **성능**: 평균 응답시간 3초 이내
- **안정성**: 시스템 가용률 99% 이상
- **테스트**: 코드 커버리지 70% 이상

### 9.2 비즈니스 KPI
- **사용률**: 일 사용자 100명 (MVP 기준)
- **만족도**: 사용자 만족도 4.0/5.0 이상  
- **재사용률**: 동일 사용자 재방문율 60% 이상

## 10. 향후 확장 계획

### 10.1 Phase 3 기능 (추후)
- 종목 추천 기능
- 차트 분석 및 기술적 지표
- 뉴스 요약 및 감정 분석
- 음성 인식 지원

### 10.2 고도화 방향
- 사용자별 개인화 추천
- 실시간 알림 기능  
- 모바일 앱 연동
- API 외부 제공

이 PRD를 바탕으로 단계적이고 체계적인 MVP 개발을 진행하시기 바랍니다.